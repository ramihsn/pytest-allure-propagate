[project]
name = "allure-pytest-ext"
version = "2.13.4.post1"
description = "Extensions for allure-pytest: propagate step failures and aggregate step failures"
readme = "README.md"
requires-python = ">=3.8.1"
license = { text = "MIT" }
authors = [
    { name = "Rami Hasan", email = "hsn.rami@gmail.com" }
]
keywords = ["pytest", "allure", "report", "propagate", "aggregate", "testing"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Framework :: Pytest",
]
dependencies = [
    "allure-pytest>=2.13.3,<=2.13.4",
]

[project.urls]
Homepage = "https://github.com/"
Repository = "https://github.com/"

[project.entry-points.pytest11]
allure_pytest_ext = "allure_pytest_ext.plugin"

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=7.1.1",
    "ipython>=8.12.3",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "coverage[toml]>=7.6.1",
]

[tool.black]
line-length = 120
exclude = '''
(
  /(\.git|\.venv|venv|build|dist|\.mypy_cache|\.pytest_cache)/
)
'''

[tool.flake8]
max-line-length = 120
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    ".mypy_cache",
    ".pytest_cache"
]

[tool.mypy]
python_version = "3.8"
strict = true
exclude = '''(?x)(
    ^\.venv
  | ^venv
  | ^build
  | ^dist
  | ^\.mypy_cache
  | ^\.pytest_cache
)'''
mypy_path = ["typings"]

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/allure_pytest_ext"]

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "README.md",
  "pyproject.toml",
  "LICENSE",
  "tests",
]

[tool.coverage.run]
branch = true
source = ["src/allure_pytest_ext"]
omit = [
  "tests/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == '__main__':",
  "if TYPE_CHECKING:",
]

[tool.coverage.paths]
source = [
  "src/allure_pytest_ext",
  ".venv/lib/python*/site-packages/allure_pytest_ext",
]
